/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(t,e,n,a){"use strict";function o(){var e=JSON.parse(localStorage.events);e.forEach(function(e){t("#event-listing tbody").append('<tr data-event-id="'+e.id+'">\t\t\t\t\t\t\t\t\t\t<td>'+e.name+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.topic+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.speaker+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.date.day+" "+e.date.month+" "+e.date.year+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.time_24h.hour+":"+e.time_24h.minute+'</td>\t\t\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-pencil" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-trash" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t\t</tr>\t\t\t')})}function l(e){t(".wdw").hide(),t("#"+e).show()}function i(){t("#linkRegister").fadeOut(500),t("#linkLogin").fadeOut(500),t("#linkLogout").fadeIn(500)}function s(){var t,e,a,o,l,i;for(t=n.getElementById("myInput"),e=t.value.toUpperCase(),a=n.getElementById("myTable"),o=a.getElementsByTagName("tr"),i=0;i<o.length;i++)l=o[i].getElementsByTagName("td")[0],l&&(l.innerHTML.toUpperCase().indexOf(e)>-1?o[i].style.display="":o[i].style.display="none")}function d(){var e=t("#inputpostimg").val(),n=t("#inputposttitel").val(),a=t("#inputpostdesc").val(),o=t("#inputpostlocation").val(),l={postimageurl:e,posttitel:n,postdesc:a,postloc:o};console.log(l)}function c(){var t={username:"username",password:"password"};localStorage.setItem("credentials",JSON.stringify(t))}null==localStorage.events?(console.log("localStorage.events is empty"),t.getJSON("assets/data/events.json").done(function(t){console.log(t),t=JSON.stringify(t),localStorage.events=t,console.log("localStorage.events successfully populated"),o()})):localStorage.events&&(console.log("localStorage.events has data"),o()),t("#create-event-btn").on("click",function(){console.log("save-btn clicked");var e=new Date;e=e.valueOf();var n=t("#wdw-event-create").find("input[name='event-name']").val(),a=t("#wdw-event-create").find("input[name='event-topics']").val(),o=t("#wdw-event-create").find("input[name='event-level']").val(),l=t("#wdw-event-create").find("input[name='event-speaker']").val(),i=t("#wdw-event-create").find("input[name='event-speaker-org']").val(),s=new Date(t("#wdw-event-create").find("input[name='event-date']").val()),d=t("#wdw-event-create").find("input[name='event-time']").val(),c=t("#wdw-event-create").find("input[name='event-info']").val();console.log(v);var r=[],r=a.split(",");for(console.log(r),p=0;p<r.length;p++)" "==r[p].charAt(0)&&(console.log("first char: "+r[p].charAt(0)),r[p]=r[p].slice(1,r[p].length),console.log("str now equals "+r[p]))," "==r[p].charAt(r[p].length-1)&&(console.log("last char: "+r[p].charAt(0)),r[p]=r[p].slice(0,r[p].length-1),console.log("str now equals "+r[p]));console.log(r);var v=d.split(":",2);v.forEach(function(t){if(console.log("aTime Foreach"),console.log(t.length),t.length>2)return console.log(t),void console.log("Invalid time");if(t.length<=2){var e=v.indexOf(t);0==e?(console.log(t),s.setHours(t)):1==e&&(console.log(t),s.setMinutes(t))}}),console.log(s);var u={id:e,name:n,topic:r,level:o,speaker:l,speaker_organization:i,date:{day:s.getDate(),month:s.getMonth(),year:s.getFullYear()},time_24h:{hour:s.getHours(),minute:s.getMinutes()},info:c,past:!1};console.log(u);var g=JSON.parse(localStorage.events);g.push(u),localStorage.setItem("events",JSON.stringify(g)),t("#event-listing").append('<tr data-event-id="'+u.id+'">\t\t\t\t\t\t\t\t\t<td>'+u.name+"</td>\t\t\t\t\t\t\t\t\t<td>"+u.topic+"</td>\t\t\t\t\t\t\t\t\t<td>"+u.speaker+"</td>\t\t\t\t\t\t\t\t\t<td>"+u.date.day+" "+u.date.month+" "+u.date.year+"</td>\t\t\t\t\t\t\t\t\t<td>"+u.time_24h.hour+":"+u.time_24h.minute+'</td>\t\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\t\t\t<i class="fa fa-pencil" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t<i class="fa fa-trash" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t</tr>\t')}),t(n).on("click",".fa-pencil",function(){console.log(".fa-pencil icon clicked");var e=t(this).parent().parent().data("event-id");t("#wdw-event-update").attr("data-event-id",e);var a=JSON.parse(localStorage.events);a.forEach(function(a){if(a.id==e){var o=a.date.year+"-"+a.date.month+"-"+a.date.day,l=o.split("-");if(1==l[1].length){var i=l[1].toString(),s="0",d=s.concat(i);l[1]=d,console.log(l[1])}if(1==l[2].length){var i=l[2].toString(),s="0",d=s.concat(i);l[2]=d,console.log(l[2])}var o=a.date.year+"-"+l[1]+"-"+l[2];console.log(o),t("#wdw-event-update").find("input[name='event-name']").val(a.name),t("#wdw-event-update").find("input[name='event-topics']").val(a.topic),t("#wdw-event-update").find("input[name='event-level']").val(a.level),t("#wdw-event-update").find("input[name='event-speaker']").val(a.speaker),t("#wdw-event-update").find("input[name='event-speaker-org']").val(a.speaker_organization),n.getElementById("edit-event-date").value=o,t("#wdw-event-update").find("input[name='event-time']").val(a.time_24h.hour+":"+a.time_24h.minute),t("#wdw-event-update").find("input[name='event-info']").val(a.info)}})}),t("#update-event-btn").on("click",function(){console.log("#update-event clicked");var e=t("#wdw-event-update").attr("data-event-id"),a=t("#wdw-event-update").find("input[name='event-name']").val(),o=t("#wdw-event-update").find("input[name='event-topics']").val(),l=t("#wdw-event-update").find("input[name='event-level']").val(),i=t("#wdw-event-update").find("input[name='event-speaker']").val(),s=t("#wdw-event-update").find("input[name='event-speaker-org']").val(),d=new Date(t("#wdw-event-update").find("input[name='event-date']").val()),c=t("#wdw-event-update").find("input[name='event-time']").val(),r=t("#wdw-event-update").find("input[name='event-info']").val();console.log(u);var v=[],v=o.split(",");for(console.log(v),p=0;p<v.length;p++)" "==v[p].charAt(0)&&(console.log("first char: "+v[p].charAt(0)),v[p]=v[p].slice(1,v[p].length),console.log("str now equals "+v[p]))," "==v[p].charAt(v[p].length-1)&&(console.log("last char: "+v[p].charAt(0)),v[p]=v[p].slice(0,v[p].length-1),console.log("str now equals "+v[p]));console.log(v);var u=c.split(":",2);u.forEach(function(t){if(console.log("aTime Foreach"),console.log(t.length),t.length>2)return console.log(t),void console.log("Invalid time");if(t.length<=2){var e=u.indexOf(t);0==e?(console.log(t),d.setHours(t)):1==e&&(console.log(t),d.setMinutes(t))}}),console.log(d);var g={id:e,name:a,topic:v,level:l,speaker:i,speaker_organization:s,date:{day:d.getDate(),month:d.getMonth(),year:d.getFullYear()},time_24h:{hour:d.getHours(),minute:d.getMinutes()},info:r,past:!1};console.log(g);var f=JSON.parse(localStorage.events);f.forEach(function(t){t.id==g.id&&f.splice(f.indexOf(t),1)}),f.push(g),localStorage.setItem("events",JSON.stringify(f)),t("#wdw-event-update").attr("data-event-id",""),t(n).find("[data-event-id="+g.id+"]").remove(),t("#event-listing tbody").prepend('<tr data-event-id="'+g.id+'">\t\t\t\t\t\t\t\t\t<td>'+g.name+"</td>\t\t\t\t\t\t\t\t\t<td>"+g.topic+"</td>\t\t\t\t\t\t\t\t\t<td>"+g.speaker+"</td>\t\t\t\t\t\t\t\t\t<td>"+g.date.day+" "+g.date.month+" "+g.date.year+"</td>\t\t\t\t\t\t\t\t\t<td>"+g.time_24h.hour+":"+g.time_24h.minute+'</td>\t\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\t\t\t<i class="fa fa-pencil" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t<i class="fa fa-trash" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t</tr>\t')}),t("#cancel-update-event-btn").on("click",function(){t("#wdw-event-update").attr("data-event-id","")}),t(n).on("click",".fa-trash",function(){console.log(".fa-trash icon clicked");var e=t(this).parent().parent().data("event-id"),a=JSON.parse(localStorage.events);a.forEach(function(t){t.id==e&&(a.splice(a.indexOf(t),1),console.log("ID "+t.id+"spliced from localTemp"))}),console.log(a),localStorage.events=JSON.stringify(a),t(n).find("[data-event-id="+e+"]").remove()});var r=[];if(localStorage.sEvents){var v=localStorage.sEvents;r=JSON.parse(v)}t(function(){});for(var p=0;p<r.length;p++)t("#lblEvents").append('<tr><th scope="row"><h4>'+r[p].id+"</h4></th><td><h4>"+r[p].name+'</h4></td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>');t("#postbtn").on("click",function(){var e=(new Date).getTime(),n=t("#inputpostimg").val(),a=t("#inputpostevent").val(),o=t("#inputpostdesc").val(),i=t("#inputpostlocation").val(),s="link";t("#lblEvents").append("<tr><td>"+a+"</td><td>"+i+"</td><td>"+e+"</td><td>"+s+'</td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>'),l("wdw-calendar");var d={};d.id=(new Date).getTime(),d.imageUrl=n,d.postevent=a,d.PostDesc=o,d.sPostLocation=i,r.push(d);var c=JSON.stringify(r);localStorage.sEvents=c}),t("#lblEvents div").each(function(e){console.log(e+": "+t(this).text()),t(this).css}),t(n).ready(function(){l("wdw-home")}),t("#myInput").keyup(function(){s()}),t(n).ready(function(){c()}),t("#loginbtn").on("click",function(){var e=JSON.parse(localStorage.getItem("credentials")),n=JSON.parse(localStorage.getItem("credentialsMember")),a=t("#inputusername").val(),o=t("#inputpassword").val();e.username===a&&e.password===o||n.username===a&&n.password===o?(console.log("Welcome Mr.   "+e.username),i(),t(".brand h1").text("Logged in as Admin # "+e.username),l("wdw-register-member"),console.log(n.username+n.password)):console.log("failed login")}),t("#memberbtn").on("click",function(){var e=t("#inputfnamereg").val(),n=t("#inputlnamereg").val(),a=t("#inputemailreg").val(),o=t("#inputlocationreg").val(),i=t("#inputusernamereg").val(),s=t("#inputpasswordreg").val(),d={fname:e,lname:n,email:a,location:o,username:i,password:s};localStorage.setItem("credentialsMember",JSON.stringify(d)),console.log("Local Storage store",d),l("wdw-login")}),t("#postbtn").on("click",function(){d(),console.log("post event")}),t("#linkLogin").on("click",function(){l("wdw-login"),console.log("Nav - login clicked")}),t("#linkHome").on("click",function(){l("wdw-home"),console.log("Nav - Home Clicked ")}),t("#linkEvents").on("click",function(){l("wdw-events"),console.log("Nav - Link Event")}),t("#linkNews").on("click",function(){l("wdw-news"),console.log("Nav - News clicked")}),t("#linkCalendar").on("click",function(){l("wdw-calendar"),console.log("Nav - Calendar clicked")}),t("#linkAllEvents").on("click",function(){l("wdw-all-events"),console.log("Nav - all events click")}),t("#btnpostevent").on("click",function(){l("wdw-post-event"),console.log("Postclicke")}),r.indexOf(this),t(".fa-fa-trash").click(function(){console.log("Trashed clicked",r,r[p],r.length),r.splice(1,1)}),t(".fa-fa-trash").click(function(){t(this).parent().hide(),console.log("Trash delete clicked ")}),console.log("events",r)}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
