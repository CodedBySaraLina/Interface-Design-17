/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(e,n,t,o){"use strict";function l(n){e(".wdw").hide(),e("#"+n).show()}function a(){e("#linkRegister").fadeOut(500),e("#linkLogin").fadeOut(500),e("#linkLogout").fadeIn(500)}function i(){var e,n,o,l,a,i;for(e=t.getElementById("myInput"),n=e.value.toUpperCase(),o=t.getElementById("myTable"),l=o.getElementsByTagName("tr"),i=0;i<l.length;i++)a=l[i].getElementsByTagName("td")[0],a&&(a.innerHTML.toUpperCase().indexOf(n)>-1?l[i].style.display="":l[i].style.display="none")}function s(){var n=e("#inputpostimg").val(),t=e("#inputposttitel").val(),o=e("#inputpostdesc").val(),l=e("#inputpostlocation").val(),a={postimageurl:n,posttitel:t,postdesc:o,postloc:l};console.log(a)}function c(){var e={username:"username",password:"password"};localStorage.setItem("credentials",JSON.stringify(e))}var r=[];if(localStorage.sEvents){var d=localStorage.sEvents;r=JSON.parse(d)}e(function(){});for(var u=0;u<r.length;u++)e("#lblEvents").append('<tr><th scope="row"><h4>'+r[u].id+"</h4></th><td><h4>"+r[u].name+'</h4></td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>');e("#postbtn").on("click",function(){var n=(new Date).getTime(),t=e("#inputpostimg").val(),o=e("#inputpostevent").val(),a=e("#inputpostdesc").val(),i=e("#inputpostlocation").val(),s="link";e("#lblEvents").append("<tr><td>"+o+"</td><td>"+i+"</td><td>"+n+"</td><td>"+s+'</td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>'),l("wdw-calendar");var c={};c.id=(new Date).getTime(),c.imageUrl=t,c.postevent=o,c.PostDesc=a,c.sPostLocation=i,r.push(c);var d=JSON.stringify(r);localStorage.sEvents=d}),e("#lblEvents div").each(function(n){console.log(n+": "+e(this).text()),e(this).css}),e(t).ready(function(){l("wdw-home")}),e("#myInput").keyup(function(){i()}),e(t).ready(function(){c()}),e("#loginbtn").on("click",function(){var n=JSON.parse(localStorage.getItem("credentials")),t=JSON.parse(localStorage.getItem("credentialsMember")),o=e("#inputusername").val(),i=e("#inputpassword").val();n.username===o&&n.password===i||t.username===o&&t.password===i?(console.log("Welcome Mr.   "+n.username),a(),e(".brand h1").text("Logged in as Admin # "+n.username),l("wdw-register-member"),console.log(t.username+t.password)):console.log("failed login")}),e("#memberbtn").on("click",function(){var n=e("#inputfnamereg").val(),t=e("#inputlnamereg").val(),o=e("#inputemailreg").val(),a=e("#inputlocationreg").val(),i=e("#inputusernamereg").val(),s=e("#inputpasswordreg").val(),c={fname:n,lname:t,email:o,location:a,username:i,password:s};localStorage.setItem("credentialsMember",JSON.stringify(c)),console.log("Local Storage store",c),l("wdw-login")}),e("#postbtn").on("click",function(){s(),console.log("post event")}),e("#linkLogin").on("click",function(){l("wdw-login"),console.log("Nav - login clicked")}),e("#linkHome").on("click",function(){l("wdw-home"),console.log("Nav - Home Clicked ")}),e("#linkEvents").on("click",function(){l("wdw-events"),console.log("Nav - Link Event")}),e("#linkNews").on("click",function(){l("wdw-news"),console.log("Nav - News clicked")}),e("#linkCalendar").on("click",function(){l("wdw-calendar"),console.log("Nav - Calendar clicked")}),e("#linkAllEvents").on("click",function(){l("wdw-all-events"),console.log("Nav - all events click")}),e("#btnpostevent").on("click",function(){l("wdw-post-event"),console.log("Postclicke")}),r.indexOf(this),e(".fa-fa-trash").click(function(){console.log("Trashed clicked",r,r[u],r.length),r.splice(1,1)}),e(".fa-fa-trash").click(function(){e(this).parent().hide(),console.log("Trash delete clicked ")}),console.log("events",r)}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
